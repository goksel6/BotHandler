/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bothandler;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import twitter4j.Query;
import twitter4j.QueryResult;
import twitter4j.Status;
import twitter4j.TwitterException;
import twitter4j.TwitterFactory;
import twitter4j.conf.ConfigurationBuilder;

/**
 *
 * @author Köksal
 */
public class ChatBot extends javax.swing.JFrame {

    /**
     * Creates new form ChatBot
     */
    //CHAT BOT SINIFIYLA ORTAK İŞLER YAPACAK SINIFLARI BURADA TANIMLIYORIZ.
    public TelevizyonEkle ekleyiciTV;
    public TelefonEkle ekleyici;
    public IsınlanmaCihaziEkle ekleyiciIsın;
    public TwitterClass tc;
//YER AYIRIYORUZ.

    public ChatBot() {
        initComponents();
        ekleyici = new TelefonEkle(this);
        ekleyiciTV = new TelevizyonEkle(this);
        ekleyiciIsın = new IsınlanmaCihaziEkle(this);
        tc = new TwitterClass(this);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        konusmaBari = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        konusmaEkrani = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        konusmaBari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                konusmaBariActionPerformed(evt);
            }
        });

        konusmaEkrani.setColumns(20);
        konusmaEkrani.setRows(5);
        jScrollPane1.setViewportView(konusmaEkrani);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(konusmaBari))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(konusmaBari, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//KULLANICININ GİRDİĞİ ÜRÜNLERİ O ÜRÜNÜN SINIFININ TÜRÜNDEN ELEMANLARI OLAN LİSTELERDE TUTUYORUZ.
    ArrayList<CellPhone> phoneList = new ArrayList<>();
    ArrayList<Television> televisionList = new ArrayList<>();
    ArrayList<IsınlanmaCihazi> isinlanmaList = new ArrayList<>();
//COMPARABLE ARAYÜZÜ İLE ÜRÜNLERİ SIRALAYABİLMEK İÇİN TweetClass CİNSİNDEN ELEMANLARI OLAN LİSTELERİ TANIMLIYORUZ. DAHA SONRA BU LİSTELERE O ÜRÜNLERİN TWEETLERİNİ ATACAĞIZ.
    ArrayList<TweetClass> Telefonlar = new ArrayList<>();
    ArrayList<TweetClass> TVler = new ArrayList<>();
    ArrayList<TweetClass> isinlanmaChzlar = new ArrayList<>();
       ArrayList<TweetClass> Telefonlar2 = new ArrayList<>();
    ArrayList<TweetClass> TVler2 = new ArrayList<>();
    ArrayList<TweetClass> isinlanmaChzlar2 = new ArrayList<>();
// CHATBOT'UN SELAMLAŞMA, HALHATIR SORMA VE VEDALAŞMA DURUMLARINA CEVAP VEREBİLMESİ İÇİN İÇİNDE OLASI CEVAPLAR OLAN LİSTELERİ TANIMLIYORUZ. CHATBOT'UN BEKLEMEDİĞİ BİR ŞEY SÖYLENDİĞİNDE DE ANLAMADIĞINI BELİRTMESİ İÇİN İSTİSNAİ DURUM LİSTESİ VARDIR.
    ArrayList<String> exceptionMessageList = new ArrayList<String>(
            Arrays.asList("anlasilmadi...", "lutfen tekrarlar misin", "sizi anlayamıyorum???"));

    ArrayList<String> greetingMessageList = new ArrayList<String>(
            Arrays.asList("ooo selammm..", "merhabalar", "mrb"));

    ArrayList<String> vedalasmaMessageList = new ArrayList<String>(
            Arrays.asList("yine bekleriz", "hoşça kal", "tekrar görüşmek üzere"));

    ArrayList<String> halhatirMessageList = new ArrayList<String>(
            Arrays.asList("iyiyim,siz?", "tesekkürler,siz)", "yuvarlanıp gidiyoruz.. siz?"));


    private void konusmaBariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_konusmaBariActionPerformed
        // TODO add your handling code here:

        String uText = konusmaBari.getText();
        konusmaEkrani.append("You: " + uText + "\n");
        konusmaBari.setText("");
//CHATBOT İLE SELAMLAŞMA HAL SORMA VE VEDALAŞMA DURUMLARINI konusmaEkrani'nda GERÇEKLEŞTİRDİĞİMİZ KISIM.
        if (uText.contains("selam")) {

            decideRandom(greetingMessageList);

        } else if (uText.contains("nasilsin")) {
            decideRandom(halhatirMessageList);

        } else if (uText.contains("güle güle")) {
            decideRandom(vedalasmaMessageList);
//BURADA ÜRÜN BİLGİSİ GİRİLİR. GİRİLMEK İSTENEN ÜRÜNÜN TÜRÜNE GÖRE JFRAME AÇILACAKTIR. ORADA ÜRÜNÜN GİRİLMESİ GEREKEN BİLGİLERİ VARDIR.
        } else if (uText.contains("urun bilgisi girmek istiyorum")) {

            konusmaEkrani.append("AI: " + "Tabii..Hangi kategoride girmek istiyorsunuz? telefon/televizyon/isinlanma cihazi:" + "\n");
        } else if (uText.contains("telefon")) { // TELEFON JFRAME'i
            this.hide();
            ekleyici.show();

        } else if (uText.contains("televizyon")) {// TELEVİZYON JFRAME'i
            this.hide();
            ekleyiciTV.show();

        } else if (uText.contains("isinlanma cihazi")) {// İSİNLANMA CİHAZİ JFRAME'i
            this.hide();
            ekleyiciIsın.show();

        } else if (uText.contains("urun sececegim")) {

            konusmaEkrani.append("AI: " + "Lutfen urunu seciniz:" + "\n");
            konusmaEkrani.append("AI: " + "1: Cep Telefonu" + "\n");
            konusmaEkrani.append("AI: " + "2: Televizyon" + "\n");
            konusmaEkrani.append("AI: " + "3: Isınlanma Cihazı" + "\n");

        } else if (uText.equals("1")) {
            try {
                tc.Fonks(phoneList);
            } catch (IOException ex) {
                Logger.getLogger(ChatBot.class.getName()).log(Level.SEVERE, null, ex);
            }
            konusmaEkrani.append("AI: " + "Cep Telefonu secildi..." + "\n");
            konusmaEkrani.append("AI: " + "Listedeki Telefonlar:" + "\n");
            for (CellPhone cellP : phoneList) {
                konusmaEkrani.append("AI: " + cellP.getpModel() + "\n");
            }
 //TWİTTERDAN ÇEKTİĞİMİZ TWEETLERİ TwitterClass SINIFINDA SENTİCNET KAYNAĞIYLA YORUMLADIK TELEFON/TELEVİZYON/IŞINLANMA CİHAZI LİSTESİNDEKİ VERİLERİ SEZGİ DEĞERİ EN YÜKSEKTEN EN DÜŞÜĞÜNE GÖRE SIRALADIK.
            konusmaEkrani.append("AI :" + "Listenizdeki telefonlarla ilgili küçük bir araştırma yaptım ve beğenilme sırasına göre listeledim -- Önerme sırası" + "\n");
            Collections.sort(Telefonlar);

  //Telefonlar LİTESİNDE HESAPLA1 SINIFI ARACILIĞI İLE HESAPLANMIŞ PUANLARIN TWEET SAYISINA BÖLÜNMÜŞ HALLERİYLE YAPILMIŞ BİR SIRALAMA VARDIR. 

            for (TweetClass tw : Telefonlar) {
                konusmaEkrani.append(tw.gethashtag()+ "   "+ tw.getsezgiDegeri() + "\n");
            }
   //Telefonlar2 LİSTESİNDE HESAPLA2 SINIFI ARACILIĞIYLA HESAPLANMIŞ PUANLARA GÖRE YAPILMIŞ BİR SIRALAMA VARDIR.

            konusmaEkrani.append("\n"+"version2"+ "\n"); 
              Collections.sort(Telefonlar2);
            for (TweetClass tw : Telefonlar2) {
                konusmaEkrani.append(tw.gethashtag()+ "   "+tw.getsezgiDegeri() + "\n");
            }


        } else if (uText.equals("2")) {
            try {
                tc.FonksTV(televisionList);
            } catch (IOException ex) {
                Logger.getLogger(ChatBot.class.getName()).log(Level.SEVERE, null, ex);
            }

            konusmaEkrani.append("AI: " + "Televizyon secildi..." + "\n");
             konusmaEkrani.append("AI: " + "Listedeki Televizyonlar:" + "\n");
            for (Television TV : televisionList) {
                konusmaEkrani.append("AI: " + TV.getpModel() + "\n");

            }
        
            Collections.sort(TVler);
            konusmaEkrani.append("AI :" + "Listenizdeki televizyonlarla ilgili küçük bir araştırma yaptım ve beğenilme sırasına göre listeledim -- Önerme sırası" + "\n");
  //TVler LİTESİNDE HESAPLA1 SINIFI ARACILIĞI İLE HESAPLANMIŞ PUANLARIN TWEET SAYISINA BÖLÜNMÜŞ HALLERİYLE YAPILMIŞ BİR SIRALAMA VARDIR. 

            for (TweetClass tw : TVler) {
                konusmaEkrani.append("AI: " + tw.gethashtag()+ "   "+tw.getsezgiDegeri() + "\n");
            }
           Collections.sort(TVler2);
    //TVler2 LİSTESİNDE HESAPLA2 SINIFI ARACILIĞIYLA HESAPLANMIŞ PUANLARA GÖRE YAPILMIŞ BİR SIRALAMA VARDIR.

            konusmaEkrani.append("\n"+"version2"+ "\n");
                for (TweetClass tw : TVler2) {
                konusmaEkrani.append("AI: " + tw.gethashtag()+ "   "+tw.getsezgiDegeri() + "\n");
                  
            }
    
        } else if (uText.equals("3")) {
            try {
                tc.Fonksisinlanma(isinlanmaList);
            } catch (IOException ex) {
                Logger.getLogger(ChatBot.class.getName()).log(Level.SEVERE, null, ex);
            }
            konusmaEkrani.append("AI: " + "Işınlanma cihazı secildi..." + "\n");
             konusmaEkrani.append("AI: " + "Listedeki cihazlar:" + "\n");
            for (IsınlanmaCihazi isin : isinlanmaList) {
                konusmaEkrani.append("AI : " + isin.getpModel() + "\n");
            }
            konusmaEkrani.append("AI :" + "Listenizdeki isinlanma cihazlari ile ilgili küçük bir araştırma yaptım ve beğenilme sırasına göre listeledim -- Önerme sırası" + "\n");
            Collections.sort(isinlanmaChzlar);
            //isinlanmaChzlar LİTESİNDE HESAPLA1 SINIFI ARACILIĞI İLE HESAPLANMIŞ PUANLARIN TWEET SAYISINA BÖLÜNMÜŞ HALLERİYLE YAPILMIŞ BİR SIRALAMA VARDIR. 
            for (TweetClass ic : isinlanmaChzlar) {
                konusmaEkrani.append("AI: " + ic.gethashtag()+ "   "+ic.getsezgiDegeri() + "\n");
            }
                 Collections.sort(isinlanmaChzlar2);
            konusmaEkrani.append("\n"+"version2" + "\n");
            //isinlanmaChzlar2 LİSTESİNDE HESAPLA2 SINIFI ARACILIĞIYLA HESAPLANMIŞ PUANLARA GÖRE YAPILMIŞ BİR SIRALAMA VARDIR.
              for (TweetClass ic : isinlanmaChzlar2) {
                konusmaEkrani.append("AI: " + ic.gethashtag()+ "   "+ic.getsezgiDegeri() + "\n");
            }

        } else {
            decideRandom(exceptionMessageList);
        }
    }
//HAL HATIR SORMA, SELAMLAŞMA VEDALAŞMA TEPKİLERİNİN GERÇEKÇİ OLMASI İÇİN RANDOM SEÇİYORUZ. decideRandom FONKSİYONU DA BU İŞİ YAPIYOR.
    private void decideRandom(ArrayList<String> messageList) {
        int decider = (int) (Math.random() * messageList.size());
        konusmaEkrani.append("AI: " + messageList.get(decider) + "\n");
    }//GEN-LAST:event_konusmaBariActionPerformed

    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChatBot().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField konusmaBari;
    private javax.swing.JTextArea konusmaEkrani;
    // End of variables declaration//GEN-END:variables
}
